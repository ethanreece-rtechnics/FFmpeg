name: C/C++ CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: install dependencies
      run: |
        sudo apt update
        sudo apt install -y cmake libass-dev libgnutls28-dev libmp3lame-dev libsdl2-dev libva-dev libvdpau-dev libvorbis-dev libxcb-xfixes0-dev meson ninja-build yasm ccache mingw-w64 mingw-w64-tools
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
    - name: make build directory
      run: mkdir build
    - name: configure
      run: ./configure --arch=x86 --target-os=mingw32 --cross-prefix=i686-w64-mingw32- --enable-cross-compile --prefix=build --pkg-config-flags="--static" --disable-shared --enable-static --extra-cflags="-Ibuild/include -static" --extra-ldflags="-Lbuild/lib -static" --extra-ldexeflags="-static" --pkg-config-flags="--static" --disable-doc
    - name: make
      run: make
    - name: make install
      run: make install
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Create a GitHub release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.5.0
      with:
        # dotnet-version: 3.1.301
        # Authenticates packages to push to GPR
        source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      env:
        NUGET_AUTH_TOKEN: '%NUGET_AUTH_TOKEN%'
    - name: make nuget package
      run: dotnet pack -c release -o nuget /p:Version=${{ steps.tag_version.outputs.new_tag }}
    - name: push nuget package
      run: dotnet nuget push "nuget/ffmpeg.**.nupkg" --no-symbols --skip-duplicate
      env:
        NUGET_AUTH_TOKEN: ${{ github.token }}
    - name: upload build
      uses: actions/upload-artifact@v3
      with:
        name: output
        path: nuget/ffmpeg.**.nupkg
